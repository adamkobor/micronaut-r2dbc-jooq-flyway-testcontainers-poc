/*
 * This file is generated by jOOQ.
 */
package com.akobor.r2dbcdemo.tables.pojos


import jakarta.persistence.Column
import jakarta.persistence.Entity
import jakarta.persistence.GeneratedValue
import jakarta.persistence.GenerationType
import jakarta.persistence.Id
import jakarta.persistence.Index
import jakarta.persistence.Table
import jakarta.validation.constraints.NotNull
import jakarta.validation.constraints.Size

import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
@Entity
@Table(
    name = "address",
    schema = "r2dbc-poc",
    indexes = [
        Index(name = "idx_address_account_id", columnList = "account_id ASC")
    ]
)
data class AddressPojo(
    @get:Id
    @get:GeneratedValue(strategy = GenerationType.IDENTITY)
    @get:Column(name = "id", nullable = false, precision = 64)
    val id: Long? = null,
    @get:Column(name = "account_id", nullable = false, precision = 64)
    @get:NotNull
    val accountId: Long? = null,
    @get:Column(name = "full_address", nullable = false, length = 255)
    @get:NotNull
    @get:Size(max = 255)
    val fullAddress: String? = null
): Serializable {

    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other === null)
            return false
        if (this::class != other::class)
            return false
        val o: AddressPojo = other as AddressPojo
        if (this.id === null) {
            if (o.id !== null)
                return false
        }
        else if (this.id != o.id)
            return false
        if (this.accountId === null) {
            if (o.accountId !== null)
                return false
        }
        else if (this.accountId != o.accountId)
            return false
        if (this.fullAddress === null) {
            if (o.fullAddress !== null)
                return false
        }
        else if (this.fullAddress != o.fullAddress)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.id === null) 0 else this.id.hashCode())
        result = prime * result + (if (this.accountId === null) 0 else this.accountId.hashCode())
        result = prime * result + (if (this.fullAddress === null) 0 else this.fullAddress.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("AddressPojo (")

        sb.append(id)
        sb.append(", ").append(accountId)
        sb.append(", ").append(fullAddress)

        sb.append(")")
        return sb.toString()
    }
}
